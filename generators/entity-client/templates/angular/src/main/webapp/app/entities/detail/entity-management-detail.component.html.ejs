<%#
 Copyright 2013-2021 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
<div class="entity-detail" *ngIf="<%= entityInstance %>">
    <h2 class="title" data-cy="<%= entityInstance %>DetailsHeading"><span <%= jhiPrefix %>Translate="<%= i18nKeyPrefix %>.detail.title"><%= entityClassHumanized %></span> <%= primaryKey.fields.map(field => `{{${entityInstance}.${field.fieldNameDottedAsserted}}}`).join(' / ') %></h2>

    <dl class="detail-content jh-entity-details">
                <%_ for (const field of fields.filter(field => !field.hidden)) {
                    const fieldName = field.fieldName;
                    const fieldType = field.fieldType;
                    const fieldTypeBlobContent = field.fieldTypeBlobContent;
                _%>
        <dt><span <%= jhiPrefix %>Translate="<%= field.fieldTranslationKey %>"<% if (field.javadoc) { if (enableTranslation) { %> [ngbTooltip]="'<%= i18nKeyPrefix %>.help.<%= fieldName %>' | translate"<% } else { %> ngbTooltip="<%= field.javadoc %>"<% } } %>><%= field.fieldNameHumanized %></span></dt>
        <dd>
                    <%_ if (field.fieldIsEnum) { _%>
            <span <%= jhiPrefix %>Translate="{{ '<%= frontendAppName %>.<%= fieldType %>.' + <%= entityInstance %>.<%= fieldName %> }}">{{ <%= entityInstance %>.<%= fieldName %> }}</span>
                    <%_ } else if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent === 'image') { _%>
            <div *ngIf="<%= entityInstance %>.<%= fieldName %>">
                <a (click)="openFile(<%= entityInstance %>.<%= fieldName %>, <%= entityInstance %>.<%= fieldName %>ContentType)">
                    <img [src]="'data:' + <%= entityInstance %>.<%= fieldName %>ContentType + ';base64,' + <%= entityInstance %>.<%= fieldName %>" style="max-width: 100%;" alt="<%= entityInstance %> image"/>
                </a>
                        {{ <%= entityInstance %>.<%= fieldName %>ContentType }}, {{ byteSize(<%= entityInstance %>.<%= fieldName %>) }}
            </div>
                    <%_ } else if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent === 'any') { _%>
            <div *ngIf="<%= entityInstance %>.<%= fieldName %>">
                <a (click)="openFile(<%= entityInstance %>.<%= fieldName %>, <%= entityInstance %>.<%= fieldName %>ContentType)" <%= jhiPrefix %>Translate="entity.action.open">open</a>
                        {{ <%= entityInstance %>.<%= fieldName %>ContentType }}, {{ byteSize(<%= entityInstance %>.<%= fieldName %>) }}
            </div>
                     <%_ } else if (['Duration'].includes(fieldType)) { _%>
                        {{ <%= entityInstance %>.<%= fieldName %> | duration }} ({{<%= entityInstance %>.<%= fieldName %> }})
                    <%_ } else if (['Instant', 'ZonedDateTime'].includes(fieldType)) { _%>
                    {{ <%= entityInstance %>.<%= fieldName %> | date:'medium' }}
                    <%_ } else if (fieldType === 'LocalDate') { _%>
                    {{ <%= entityInstance %>.<%= fieldName %> | date:'mediumDate' }}
                    <%_ } else { _%>
            <span>{{ <%= entityInstance %>.<%= fieldName %> }}</span>
                    <%_ } _%>
        </dd>
                <%_ } _%>
                <%_ for (const relationship of relationships) {
                const relationshipType = relationship.relationshipType;
                const ownerSide = relationship.ownerSide;
                if (ownerSide) {
                    const relationshipFieldName = relationship.relationshipFieldName;
                    const relationshipFieldNamePlural = relationship.relationshipFieldNamePlural;
                    const otherEntityName = relationship.otherEntityName;
                    const otherEntityStateName = relationship.otherEntityStateName;
                    const otherEntity = relationship.otherEntity;
                    const instance = relationship.relationshipManyToMany ? relationshipFieldName : `${entityInstance}.${relationshipFieldName}`;
                    const relationshipKeys = otherEntity.primaryKey.fields.length === 1 ? `${instance}.${otherEntity.primaryKey.name}!` : `{ ${otherEntity.primaryKey.fields.map(field => `${field.fieldName}: ${instance}.${field.fieldNameDottedAsserted}`).join(', ')} }`;
                    const routerLink = `[routerLink]="['/${ otherEntityStateName }', ${ relationshipKeys }, 'view']"`;
            _%>
                    <%_ if (otherEntityName === 'user') { _%>
        <dt><span <%= jhiPrefix %>Translate="<%= i18nKeyPrefix %>.<%= relationship.relationshipName %>"><%= relationship.relationshipNameHumanized %></span></dt>
                <%_ if (relationship.relationshipManyToMany) { _%>
        <dd>
            <span *ngFor="let <%= relationshipFieldName %> of <%= entityInstance %>.<%= relationshipFieldNamePlural %>; let last = last">
                        {{ <%- instance %>.<%- relationship.otherEntityField -%> }}{{ last ? '' : ', ' }}
            </span>
        </dd>
                        <%_ } else { _%>
        <dd>
            <div *ngIf="<%= entityInstance + "." + relationshipFieldName %>">
                        {{ <%- instance %>.<%- relationship.otherEntityField -%> }}
            </div>
        </dd>
                        <%_ } _%>
                    <%_ } else { _%>
                        <%_ if (relationship.relationshipManyToMany) { _%>
        <dt<% if (fineGrainedPermissions) { %> *jhiHasAnyAuthority="'<%= otherEntityStateName %>.read'"<% } %>><span <%= jhiPrefix %>Translate="<%=`${i18nKeyPrefix}.${relationship.relationshipName}` %>"><%= relationship.relationshipNameHumanized %></span></dt>
        <dd<% if (fineGrainedPermissions) { %>  *jhiHasAnyAuthority="'<%= otherEntityStateName %>.read'"<% } %>>
            <span *ngFor="let <%= relationshipFieldName %> of <%= entityInstance %>.<%= relationshipFieldNamePlural %>; let last = last">
                <a <%- routerLink %>>{{ <%- instance %>.<%- relationship.otherEntityField -%> }}</a>{{ last ? '' : ', ' }}
            </span>
        </dd>
                        <%_ } else { _%>
                            <%_ if (relationship.otherEntity.primaryKey.ownFields.length === 0) {
                                const routerLink = relationship.otherEntity.primaryKey.fields.length === 1 ? `${entityInstance}.${relationship.otherEntity.primaryKey.name}!` : '{ '+ relationship.otherEntity.primaryKey.fields.map(field => `${field.fieldName}: ${entityInstance}.${relationship.relationshipName}.${field.fieldNameDotted}`).join(', ') + ' }' _%>
        <dt<% if (fineGrainedPermissions) { %>  *jhiHasAnyAuthority="'<%= otherEntityStateName %>.read'"<% } %>><span <%= jhiPrefix %>Translate="<%=`${i18nKeyPrefix}.${relationship.relationshipName}` %>"><%= relationship.relationshipNameHumanized %></span></dt>
        <dd<% if (fineGrainedPermissions) { %>  *jhiHasAnyAuthority="'<%= otherEntityStateName %>.read'"<% } %>>
            <div *ngIf="<%= entityInstance + "." + relationship.relationshipName %>">
                <p-button type="submit" [routerLink]="['/<%= relationship.otherEntity.entityStateName %>', <%- routerLink %>, 'view' ]"
                                  icon="pi pi-eye" styleClass="p-button-info">
                </p-button>
            </div>
        </dd>
                            <%_ } _%>
                            <%_ relationship.clientFields.forEach(cf => {
                                const relationshipKeys = cf.entity.primaryKey && cf.entity.primaryKey.composite ?
                                    `{ ${cf.routerLinkValues.map(v => `${v.fieldName} : ${entityInstance}.${relationship.relationshipName}.${v.nameDotted}`).join(' ,') } }`:
                                    `${cf.routerLinkValues.map(v => `${entityInstance}.${relationship.relationshipName}.${v.nameDotted}`).join('')}`;
                                const routerLink = `[routerLink]="['/${ cf.entity.entityStateName }', ${ relationshipKeys }, 'view']"`;_%>
        <dt<% if (fineGrainedPermissions) { %>  *jhiHasAnyAuthority="'<%= otherEntityStateName %>.read'"<% } %>><span <%= jhiPrefix %>Translate="<%= cf.translationKey %>"><%= cf.lastRelationship.relationshipNameHumanized %></span></dt>
        <dd<% if (fineGrainedPermissions) { %>  *jhiHasAnyAuthority="'<%= otherEntityStateName %>.read'"<% } %>>
            <div *ngIf="<%= entityInstance + "." + relationship.relationshipName %>">
                <a <%- routerLink %>>{{ <%- instance %>.<%- cf.relatedFieldPath.join('.') -%> }}</a>
            </div>
        </dd>
                            <%_ }) _%>
                        <%_ } _%>
                    <%_ } _%>
                <%_ } _%>
            <%_ } _%>
    </dl>
    <div class="detail-buttons">
        <button pButton type="button" (click)="previousState()" class="p-button-info" icon="pi pi-arrow-left" [label]="'entity.action.back' | translate" data-cy="entityDetailsBackButton"></button>
                <%_ if (!readOnly) { _%>
        <button<% if (fineGrainedPermissions) { %> *jhiHasAnyAuthority="'<%= entityStateName %>.update'"<% } %> pButton type="button" icon="pi pi-pencil" [label]="'entity.action.edit' | translate" [routerLink]="['/<%= entityUrl %>', <%= primaryKey.fields.length === 1 ? `${entityInstance}.${primaryKey.name}` : '{ '+ primaryKey.fields.map(field => `${field.fieldName}: ${entityInstance}.${field.fieldNameDottedAsserted}`).join(', ') + ' }' %>, 'edit']"></button>
                <%_ } _%>
    </div>
</div>
